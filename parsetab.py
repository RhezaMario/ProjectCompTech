
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEMODULOCLOSE CONCAT DIVIDE ECHO ELSE EQUALS ET GT GTE ID IF LBRACKET LPAREN LT LTE MINUS MODULO NE NUMBER OPEN PLUS PRINT RBRACKET RPAREN SEMICOLON STRING TIMES WHILEprogram : OPEN statement_list CLOSE program : errorcommand : PRINT print_list  end\n        | ECHO print_list end\n    print_list : print_list CONCAT print_item\n        | print_itemprint_item : STRINGprint_item : expression\n    expression : expression PLUS expression \n        | expression MINUS expression \n        | expression TIMES expression \n        | expression DIVIDE expression \n        | expression MODULO expression \n    \n    comparison : expression LTE expression\n        | expression ET expression\n        | expression NE expression\n        | expression GTE expression\n        | expression LT expression\n        | expression GT expression\n\n    expression : NUMBERexpression : LPAREN expression RPARENcommand : ID EQUALS expression endexpression : IDcommand : IF LPAREN comparison RPAREN LBRACKET statement_list RBRACKET\n                    | IF LPAREN comparison RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKETstatement_list : statement_list statement \n                      | statementstatement : command\n        |\n    command : WHILE LPAREN comparison RPAREN LBRACKET statement_list RBRACKET\n    end : SEMICOLON\n        |\n    '
    
_lr_action_items = {'OPEN':([0,],[2,]),'error':([0,],[3,]),'$end':([1,3,12,],[0,-2,-1,]),'CLOSE':([2,4,5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,65,66,70,],[-29,12,-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,-24,-30,-25,]),'PRINT':([2,4,5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,55,62,63,64,65,66,68,69,70,],[7,7,-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,7,7,7,7,-24,-30,7,7,-25,]),'ECHO':([2,4,5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,55,62,63,64,65,66,68,69,70,],[8,8,-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,8,8,8,8,-24,-30,8,8,-25,]),'ID':([2,4,5,6,7,8,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,34,35,39,40,41,42,43,44,45,46,48,49,50,51,52,53,55,62,63,64,65,66,68,69,70,],[9,9,-27,-28,20,20,-26,-32,-6,-7,-8,-20,20,-23,-32,20,20,20,-3,20,-31,20,20,20,20,20,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,20,20,20,20,20,20,9,9,9,9,-24,-30,9,9,-25,]),'IF':([2,4,5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,55,62,63,64,65,66,68,69,70,],[10,10,-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,10,10,10,10,-24,-30,10,10,-25,]),'WHILE':([2,4,5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,55,62,63,64,65,66,68,69,70,],[11,11,-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,11,11,11,11,-24,-30,11,11,-25,]),'RBRACKET':([5,6,13,14,15,16,17,18,20,21,25,27,34,35,39,40,41,42,43,44,45,46,55,62,63,64,65,66,68,69,70,],[-27,-28,-26,-32,-6,-7,-8,-20,-23,-32,-3,-31,-4,-32,-5,-9,-10,-11,-12,-13,-21,-22,-29,-29,65,66,-24,-30,-29,70,-25,]),'STRING':([7,8,26,],[16,16,16,]),'NUMBER':([7,8,19,22,23,24,26,28,29,30,31,32,48,49,50,51,52,53,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'LPAREN':([7,8,10,11,19,22,23,24,26,28,29,30,31,32,48,49,50,51,52,53,],[19,19,23,24,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'EQUALS':([9,],[22,]),'CONCAT':([14,15,16,17,18,20,21,39,40,41,42,43,44,45,],[26,-6,-7,-8,-20,-23,26,-5,-9,-10,-11,-12,-13,-21,]),'SEMICOLON':([14,15,16,17,18,20,21,35,39,40,41,42,43,44,45,],[27,-6,-7,-8,-20,-23,27,27,-5,-9,-10,-11,-12,-13,-21,]),'PLUS':([17,18,20,33,35,37,40,41,42,43,44,45,56,57,58,59,60,61,],[28,-20,-23,28,28,28,-9,-10,-11,-12,-13,-21,28,28,28,28,28,28,]),'MINUS':([17,18,20,33,35,37,40,41,42,43,44,45,56,57,58,59,60,61,],[29,-20,-23,29,29,29,-9,-10,-11,-12,-13,-21,29,29,29,29,29,29,]),'TIMES':([17,18,20,33,35,37,40,41,42,43,44,45,56,57,58,59,60,61,],[30,-20,-23,30,30,30,30,30,-11,-12,-13,-21,30,30,30,30,30,30,]),'DIVIDE':([17,18,20,33,35,37,40,41,42,43,44,45,56,57,58,59,60,61,],[31,-20,-23,31,31,31,31,31,-11,-12,-13,-21,31,31,31,31,31,31,]),'MODULO':([17,18,20,33,35,37,40,41,42,43,44,45,56,57,58,59,60,61,],[32,-20,-23,32,32,32,32,32,-11,-12,-13,-21,32,32,32,32,32,32,]),'RPAREN':([18,20,33,36,38,40,41,42,43,44,45,56,57,58,59,60,61,],[-20,-23,45,47,54,-9,-10,-11,-12,-13,-21,-14,-15,-16,-17,-18,-19,]),'LTE':([18,20,37,40,41,42,43,44,45,],[-20,-23,48,-9,-10,-11,-12,-13,-21,]),'ET':([18,20,37,40,41,42,43,44,45,],[-20,-23,49,-9,-10,-11,-12,-13,-21,]),'NE':([18,20,37,40,41,42,43,44,45,],[-20,-23,50,-9,-10,-11,-12,-13,-21,]),'GTE':([18,20,37,40,41,42,43,44,45,],[-20,-23,51,-9,-10,-11,-12,-13,-21,]),'LT':([18,20,37,40,41,42,43,44,45,],[-20,-23,52,-9,-10,-11,-12,-13,-21,]),'GT':([18,20,37,40,41,42,43,44,45,],[-20,-23,53,-9,-10,-11,-12,-13,-21,]),'LBRACKET':([47,54,67,],[55,62,68,]),'ELSE':([65,],[67,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statement_list':([2,55,62,68,],[4,63,64,69,]),'statement':([2,4,55,62,63,64,68,69,],[5,13,5,5,13,13,5,13,]),'command':([2,4,55,62,63,64,68,69,],[6,6,6,6,6,6,6,6,]),'print_list':([7,8,],[14,21,]),'print_item':([7,8,26,],[15,15,39,]),'expression':([7,8,19,22,23,24,26,28,29,30,31,32,48,49,50,51,52,53,],[17,17,33,35,37,37,17,40,41,42,43,44,56,57,58,59,60,61,]),'end':([14,21,35,],[25,34,46,]),'comparison':([23,24,],[36,38,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> OPEN statement_list CLOSE','program',3,'p_program','parsers.py',11),
  ('program -> error','program',1,'p_program_error','parsers.py',15),
  ('command -> PRINT print_list end','command',3,'p_command_print','parsers.py',21),
  ('command -> ECHO print_list end','command',3,'p_command_print','parsers.py',22),
  ('print_list -> print_list CONCAT print_item','print_list',3,'p_print_list','parsers.py',27),
  ('print_list -> print_item','print_list',1,'p_print_list','parsers.py',28),
  ('print_item -> STRING','print_item',1,'p_item_string','parsers.py',36),
  ('print_item -> expression','print_item',1,'p_item_expr','parsers.py',40),
  ('expression -> expression PLUS expression','expression',3,'p_expression_operator','parsers.py',46),
  ('expression -> expression MINUS expression','expression',3,'p_expression_operator','parsers.py',47),
  ('expression -> expression TIMES expression','expression',3,'p_expression_operator','parsers.py',48),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_operator','parsers.py',49),
  ('expression -> expression MODULO expression','expression',3,'p_expression_operator','parsers.py',50),
  ('comparison -> expression LTE expression','comparison',3,'p_expression_relop','parsers.py',56),
  ('comparison -> expression ET expression','comparison',3,'p_expression_relop','parsers.py',57),
  ('comparison -> expression NE expression','comparison',3,'p_expression_relop','parsers.py',58),
  ('comparison -> expression GTE expression','comparison',3,'p_expression_relop','parsers.py',59),
  ('comparison -> expression LT expression','comparison',3,'p_expression_relop','parsers.py',60),
  ('comparison -> expression GT expression','comparison',3,'p_expression_relop','parsers.py',61),
  ('expression -> NUMBER','expression',1,'p_expression_numeric','parsers.py',67),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parsers.py',71),
  ('command -> ID EQUALS expression end','command',4,'p_command_def_id','parsers.py',75),
  ('expression -> ID','expression',1,'p_expression_id','parsers.py',79),
  ('command -> IF LPAREN comparison RPAREN LBRACKET statement_list RBRACKET','command',7,'p_if_statement','parsers.py',84),
  ('command -> IF LPAREN comparison RPAREN LBRACKET statement_list RBRACKET ELSE LBRACKET statement_list RBRACKET','command',11,'p_if_statement','parsers.py',85),
  ('statement_list -> statement_list statement','statement_list',2,'p_statement_list','parsers.py',92),
  ('statement_list -> statement','statement_list',1,'p_statement_list','parsers.py',93),
  ('statement -> command','statement',1,'p_statement','parsers.py',101),
  ('statement -> <empty>','statement',0,'p_statement','parsers.py',102),
  ('command -> WHILE LPAREN comparison RPAREN LBRACKET statement_list RBRACKET','command',7,'p_command_while','parsers.py',111),
  ('end -> SEMICOLON','end',1,'p_end','parsers.py',122),
  ('end -> <empty>','end',0,'p_end','parsers.py',123),
]
